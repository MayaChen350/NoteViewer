name: Cross-platform Build Checks

on: [push, pull_request]

jobs:
  build:
      strategy:
        fail-fast: false
        matrix:
          os: [ubuntu-latest, windows-latest, macos-latest]
          arch: [x64, aarch64]
      runs-on: ${{ matrix.os }}

      steps:
        - name: Checkout sources
          uses: actions/checkout@v4

        - name: Install dependency on ubuntu
          if: matrix.os == 'ubuntu-latest'
          run: |
            sudo apt update && sudo apt install -y build-essential
            wget https://cmake.org/files/v4.0/cmake-4.0.0-linux-x86_64.tar.gz
            tar -xzf cmake-4.0.0-linux-x86_64.tar.gz
            sudo mv cmake-4.0.0-linux-x86_64 /opt/cmake-4.0
            echo "/opt/cmake-4.0/bin" >> $GITHUB_PATH
          
        - name: Install dependency on windows
          if: matrix.os == 'windows-latest'
          uses: ssrobins/install-cmake@v1
          with:
            version: 4.0.0
         
        - name: Run CMake's build system generator 
          if: ${{ (matrix.arch == 'x64' && matrix.os != 'macos-latest') || (matrix.os == 'macos-latest' && matrix.arch == 'aarch64') }}
          run: cmake -S . -B out

        - name: Install cross-compiler
          if: ${{matrix.arch == 'aarch64' && matrix.os == 'ubuntu-latest'}}
          run: sudo apt update && sudo apt install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu 
        
        - name: Install windows "cross-compiler"
          if: ${{matrix.arch == 'aarch64' && matrix.os == 'windows-latest'}}
          run: choco install zig

        - name: Run CMake's build system gen for cross-compilation
          if: ${{matrix.arch == 'aarch64' && matrix.os == 'ubuntu-latest'}}
          run: |
            cmake -S . -B out \
            -DCMAKE_SYSTEM_NAME=Linux \
            -DCMAKE_SYSTEM=aarch64 \
            -DCMAKE_C_COMPILER=aarch64-linux-gcc
        
        - name: Run CMake's build system gen for cross-compilation
          if: ${{matrix.arch == 'aarch64' && matrix.os == 'windows-latest'}}
          run: |
            cmake -S . -B out \
            -DCMAKE_SYSTEM_NAME=Windows \
            -DCMAKE_SYSTEM_PROCESSOR=aarch64 \
            -DCMAKE_C_COMPILER="zig cc -target aarch64-windows-gnu" \
            -DCMAKE_CXX_COMPILER="zig c++ -target aarch64-windows-gnu" 
        
        - name: Run CMake's build system gen for cross-compilation
          if: ${{matrix.arch == 'x64' && matrix.os == 'macos-latest'}}
          run: |
            cmake -S . -B out \
            -DCMAKE_OSX_ARCHITECTURES=x86_64

        - name: Try compiling
          run: cmake --build out

  build-freebsd:
    # if: false
    strategy:
        fail-fast: false
        matrix:
          arch: [x64, aarch64]
    runs-on: ubuntu-latest
    steps:
      - uses: vmactions/freebsd-vm@v1
        with:
          usesh: true
          prepare: |
            pkg update
            pkg install -y gcc realpath gmake cmake
            echo $((realpath .))
        
      - name: Run CMake's build system generator
        if: matrix.arch == 'x64' 
        run: cmake -S . -B out
      
      - name: Run CMake's build system gen for cross-compilation
        if: matrix.arch == 'aarch64' 
        run: |
          cmake -S . -B out \
          -DCMAKE_SYSTEM_NAME=FreeBSD \
          -DCMAKE_SYSTEM=aarch64 \
          -DCMAKE_C_COMPILER=clang \
          -DCMAKE_CXX_COMPILER=clang++ \
          -DCMAKE_C_FLAGS="--target=aarch64-unknown-freebsd13.2" \
          -DCMAKE_CXX_FLAGS="--target=aarch64-unknown-freebsd13.2"

      - name: Try compiling
        run: cmake --build out 
